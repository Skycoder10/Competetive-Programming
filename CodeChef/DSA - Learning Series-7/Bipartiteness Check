//AUTHOR: phoenix_0010
//Jalpaiguri Government Engineering College




#include <bits/stdc++.h>
using namespace std;


#define spdio ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define pb push_back
#define pp pop_back()
#define pf push_front
#define ppf pop_front()
#define ff first
#define ss second
#define mp make_pair
#define fr(i,j,n) for(ll i=j; i<n; i++)
#define rfr(i,j,n) for(ll i=n-1; i>=j; i--)
#define pll pair<ll,ll>
#define plb pair<ll,bool>
#define psl pair<string,ll>
#define psb pair<string,bool>
#define srt(v) sort((v).begin(),(v).end())
#define ub(v,val) upper_bound((v).begin(),(v).end(),(val))-(v).begin()
#define lb(v,val) lower_bound((v).begin(),(v).end(),(val))-(v).begin()


typedef long double ld;
typedef long long int ll;


//getline(cin,string);
const ll inf = (ll) 1e18 + 19;
const ll mod = (ll) 1e9  +  7;




void cazz() {
    ll t=1,i=0,j,n;
    cin>>t;
    while(t--) {
        ll m,a,b;
        cin>>n>>m;
        vector <ll> v[n+1];
        fr(i,0,m) {
            cin>>a>>b;
            v[a].pb(b);
            v[b].pb(a);
        }
        ll color[n+1]={};
        bool vis[n+1]={};
        queue <ll> q;
        q.push(1);
        color[1]=1;
        bool f=0;
        while(q.size()) {
            ll val=q.front();
            q.pop();
            vis[val]=true;
            fr(i,0,v[val].size()) {
                if(!vis[v[val][i]]) {
                    q.push(v[val][i]);
                }
                if(color[v[val][i]] && color[val]==color[v[val][i]]) {
                    f=1;
                    break;
                }
                else if(!color[v[val][i]]) {
                    if(color[val]==1) color[v[val][i]]=2;
                    else color[v[val][i]]=1;
                }
            }
            if(f) break;
        }
        if(f) cout<<"The graph is not bipartite.\n";
        else cout<<"The graph is bipartite.\n";
    }
}




int main() {
    spdio;
	cazz();
	return 0;
}
